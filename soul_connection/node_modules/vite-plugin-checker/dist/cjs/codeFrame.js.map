{"version":3,"sources":["../../src/codeFrame.ts"],"sourcesContent":["import os from 'node:os'\n\nimport { type SourceLocation, codeFrameColumns } from '@babel/code-frame'\n\n/**\n * Create a code frame from source code and location\n * @param source source code\n * @param location babel compatible location to highlight\n */\nexport function createFrame(source: string, location: SourceLocation): string {\n  return codeFrameColumns(source, location, {\n    // worker tty did not fork parent process stdout, let's make a workaround\n    forceColor: true,\n  })\n    .split('\\n')\n    .map((line) => `  ${line}`)\n    .join(os.EOL)\n}\n\nexport function tsLikeLocToBabelLoc(\n  tsLoc: Record<\n    'start' | 'end',\n    { line: number; character: number } /** 0-based */\n  >,\n): SourceLocation {\n  return {\n    start: { line: tsLoc.start.line + 1, column: tsLoc.start.character + 1 },\n    end: { line: tsLoc.end.line + 1, column: tsLoc.end.character + 1 },\n  }\n}\n\nexport function lineColLocToBabelLoc(d: {\n  line: number\n  column: number\n  endLine?: number\n  endColumn?: number\n}): SourceLocation {\n  return {\n    start: { line: d.line, column: d.column },\n    end: { line: d.endLine || 0, column: d.endColumn },\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe;AAEf,wBAAsD;AAO/C,SAAS,YAAY,QAAgB,UAAkC;AAC5E,aAAO,oCAAiB,QAAQ,UAAU;AAAA;AAAA,IAExC,YAAY;AAAA,EACd,CAAC,EACE,MAAM,IAAI,EACV,IAAI,CAAC,SAAS,KAAK,MAAM,EACzB,KAAK,eAAAA,QAAG,GAAG;AAChB;AAEO,SAAS,oBACd,OAIgB;AAChB,SAAO;AAAA,IACL,OAAO,EAAE,MAAM,MAAM,MAAM,OAAO,GAAG,QAAQ,MAAM,MAAM,YAAY,EAAE;AAAA,IACvE,KAAK,EAAE,MAAM,MAAM,IAAI,OAAO,GAAG,QAAQ,MAAM,IAAI,YAAY,EAAE;AAAA,EACnE;AACF;AAEO,SAAS,qBAAqB,GAKlB;AACjB,SAAO;AAAA,IACL,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO;AAAA,IACxC,KAAK,EAAE,MAAM,EAAE,WAAW,GAAG,QAAQ,EAAE,UAAU;AAAA,EACnD;AACF;","names":["os"]}